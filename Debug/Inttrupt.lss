
Inttrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000182  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001d6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000208  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000085e  00000000  00000000  0000026c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005f8  00000000  00000000  00000aca  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000031d  00000000  00000000  000010c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  000013e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000034b  00000000  00000000  00001434  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000315  00000000  00000000  0000177f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001a94  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 97 00 	jmp	0x12e	; 0x12e <__vector_1>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 bf 00 	jmp	0x17e	; 0x17e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "avr/interrupt.h"

int main(void)
{
	
	DDRD = 0x00;
  6c:	11 ba       	out	0x11, r1	; 17
	DDRC = 0xFF;
  6e:	8f ef       	ldi	r24, 0xFF	; 255
  70:	84 bb       	out	0x14, r24	; 20
	MCUCR =0x02;		
  72:	82 e0       	ldi	r24, 0x02	; 2
  74:	85 bf       	out	0x35, r24	; 53
	GICR = (1<<INT0);
  76:	80 e4       	ldi	r24, 0x40	; 64
  78:	8b bf       	out	0x3b, r24	; 59
	sei();
  7a:	78 94       	sei

	
    while (1) 
    {	
		
		PORTC = 0b00000001;
  7c:	81 e0       	ldi	r24, 0x01	; 1
  7e:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  80:	2f e7       	ldi	r18, 0x7F	; 127
  82:	8a e1       	ldi	r24, 0x1A	; 26
  84:	96 e0       	ldi	r25, 0x06	; 6
  86:	21 50       	subi	r18, 0x01	; 1
  88:	80 40       	sbci	r24, 0x00	; 0
  8a:	90 40       	sbci	r25, 0x00	; 0
  8c:	e1 f7       	brne	.-8      	; 0x86 <main+0x1a>
  8e:	00 c0       	rjmp	.+0      	; 0x90 <main+0x24>
  90:	00 00       	nop
		_delay_ms(250);
		PORTC = 0b00000010;
  92:	82 e0       	ldi	r24, 0x02	; 2
  94:	85 bb       	out	0x15, r24	; 21
  96:	2f e7       	ldi	r18, 0x7F	; 127
  98:	8a e1       	ldi	r24, 0x1A	; 26
  9a:	96 e0       	ldi	r25, 0x06	; 6
  9c:	21 50       	subi	r18, 0x01	; 1
  9e:	80 40       	sbci	r24, 0x00	; 0
  a0:	90 40       	sbci	r25, 0x00	; 0
  a2:	e1 f7       	brne	.-8      	; 0x9c <main+0x30>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <main+0x3a>
  a6:	00 00       	nop
		_delay_ms(250);
		PORTC = 0b00000100;
  a8:	84 e0       	ldi	r24, 0x04	; 4
  aa:	85 bb       	out	0x15, r24	; 21
  ac:	2f e7       	ldi	r18, 0x7F	; 127
  ae:	8a e1       	ldi	r24, 0x1A	; 26
  b0:	96 e0       	ldi	r25, 0x06	; 6
  b2:	21 50       	subi	r18, 0x01	; 1
  b4:	80 40       	sbci	r24, 0x00	; 0
  b6:	90 40       	sbci	r25, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x46>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x50>
  bc:	00 00       	nop
		_delay_ms(250);
		PORTC = 0b00001000;
  be:	88 e0       	ldi	r24, 0x08	; 8
  c0:	85 bb       	out	0x15, r24	; 21
  c2:	2f e7       	ldi	r18, 0x7F	; 127
  c4:	8a e1       	ldi	r24, 0x1A	; 26
  c6:	96 e0       	ldi	r25, 0x06	; 6
  c8:	21 50       	subi	r18, 0x01	; 1
  ca:	80 40       	sbci	r24, 0x00	; 0
  cc:	90 40       	sbci	r25, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <main+0x5c>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x66>
  d2:	00 00       	nop
		_delay_ms(250);
		PORTC = 0b00010000;
  d4:	80 e1       	ldi	r24, 0x10	; 16
  d6:	85 bb       	out	0x15, r24	; 21
  d8:	2f e7       	ldi	r18, 0x7F	; 127
  da:	8a e1       	ldi	r24, 0x1A	; 26
  dc:	96 e0       	ldi	r25, 0x06	; 6
  de:	21 50       	subi	r18, 0x01	; 1
  e0:	80 40       	sbci	r24, 0x00	; 0
  e2:	90 40       	sbci	r25, 0x00	; 0
  e4:	e1 f7       	brne	.-8      	; 0xde <main+0x72>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <main+0x7c>
  e8:	00 00       	nop
		_delay_ms(250);
		PORTC = 0b00100000;
  ea:	80 e2       	ldi	r24, 0x20	; 32
  ec:	85 bb       	out	0x15, r24	; 21
  ee:	2f e7       	ldi	r18, 0x7F	; 127
  f0:	8a e1       	ldi	r24, 0x1A	; 26
  f2:	96 e0       	ldi	r25, 0x06	; 6
  f4:	21 50       	subi	r18, 0x01	; 1
  f6:	80 40       	sbci	r24, 0x00	; 0
  f8:	90 40       	sbci	r25, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <main+0x88>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x92>
  fe:	00 00       	nop
		_delay_ms(250);
		PORTC = 0b01000000;
 100:	80 e4       	ldi	r24, 0x40	; 64
 102:	85 bb       	out	0x15, r24	; 21
 104:	2f e7       	ldi	r18, 0x7F	; 127
 106:	8a e1       	ldi	r24, 0x1A	; 26
 108:	96 e0       	ldi	r25, 0x06	; 6
 10a:	21 50       	subi	r18, 0x01	; 1
 10c:	80 40       	sbci	r24, 0x00	; 0
 10e:	90 40       	sbci	r25, 0x00	; 0
 110:	e1 f7       	brne	.-8      	; 0x10a <main+0x9e>
 112:	00 c0       	rjmp	.+0      	; 0x114 <main+0xa8>
 114:	00 00       	nop
		_delay_ms(250);
		PORTC = 0b10000000;
 116:	80 e8       	ldi	r24, 0x80	; 128
 118:	85 bb       	out	0x15, r24	; 21
 11a:	2f e7       	ldi	r18, 0x7F	; 127
 11c:	8a e1       	ldi	r24, 0x1A	; 26
 11e:	96 e0       	ldi	r25, 0x06	; 6
 120:	21 50       	subi	r18, 0x01	; 1
 122:	80 40       	sbci	r24, 0x00	; 0
 124:	90 40       	sbci	r25, 0x00	; 0
 126:	e1 f7       	brne	.-8      	; 0x120 <main+0xb4>
 128:	00 c0       	rjmp	.+0      	; 0x12a <main+0xbe>
 12a:	00 00       	nop
 12c:	a7 cf       	rjmp	.-178    	; 0x7c <main+0x10>

0000012e <__vector_1>:
		_delay_ms(250);
    }
return 0;
}
ISR(INT0_vect){
 12e:	1f 92       	push	r1
 130:	0f 92       	push	r0
 132:	0f b6       	in	r0, 0x3f	; 63
 134:	0f 92       	push	r0
 136:	11 24       	eor	r1, r1
 138:	2f 93       	push	r18
 13a:	3f 93       	push	r19
 13c:	8f 93       	push	r24
 13e:	9f 93       	push	r25
	int x = PORTC;
 140:	85 b3       	in	r24, 0x15	; 21
	PORTC = 0xFF;
 142:	9f ef       	ldi	r25, 0xFF	; 255
 144:	95 bb       	out	0x15, r25	; 21
 146:	2f ef       	ldi	r18, 0xFF	; 255
 148:	39 e6       	ldi	r19, 0x69	; 105
 14a:	98 e1       	ldi	r25, 0x18	; 24
 14c:	21 50       	subi	r18, 0x01	; 1
 14e:	30 40       	sbci	r19, 0x00	; 0
 150:	90 40       	sbci	r25, 0x00	; 0
 152:	e1 f7       	brne	.-8      	; 0x14c <__vector_1+0x1e>
 154:	00 c0       	rjmp	.+0      	; 0x156 <__vector_1+0x28>
 156:	00 00       	nop
	_delay_ms(1000);
	PORTC = x;
 158:	85 bb       	out	0x15, r24	; 21
 15a:	2f e7       	ldi	r18, 0x7F	; 127
 15c:	3a e1       	ldi	r19, 0x1A	; 26
 15e:	86 e0       	ldi	r24, 0x06	; 6
 160:	21 50       	subi	r18, 0x01	; 1
 162:	30 40       	sbci	r19, 0x00	; 0
 164:	80 40       	sbci	r24, 0x00	; 0
 166:	e1 f7       	brne	.-8      	; 0x160 <__vector_1+0x32>
 168:	00 c0       	rjmp	.+0      	; 0x16a <__vector_1+0x3c>
 16a:	00 00       	nop
	_delay_ms(250);
	
}
 16c:	9f 91       	pop	r25
 16e:	8f 91       	pop	r24
 170:	3f 91       	pop	r19
 172:	2f 91       	pop	r18
 174:	0f 90       	pop	r0
 176:	0f be       	out	0x3f, r0	; 63
 178:	0f 90       	pop	r0
 17a:	1f 90       	pop	r1
 17c:	18 95       	reti

0000017e <_exit>:
 17e:	f8 94       	cli

00000180 <__stop_program>:
 180:	ff cf       	rjmp	.-2      	; 0x180 <__stop_program>
